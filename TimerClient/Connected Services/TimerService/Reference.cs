//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimerClient.TimerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TimerService.ITimerService")]
    public interface ITimerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/StartTimer", ReplyAction="http://tempuri.org/ITimerService/StartTimerResponse")]
        void StartTimer(int miliseconds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimerService/StartTimer", ReplyAction="http://tempuri.org/ITimerService/StartTimerResponse")]
        System.Threading.Tasks.Task StartTimerAsync(int miliseconds);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITimerServiceChannel : TimerClient.TimerService.ITimerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TimerServiceClient : System.ServiceModel.ClientBase<TimerClient.TimerService.ITimerService>, TimerClient.TimerService.ITimerService {
        
        public TimerServiceClient() {
        }
        
        public TimerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TimerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void StartTimer(int miliseconds) {
            base.Channel.StartTimer(miliseconds);
        }
        
        public System.Threading.Tasks.Task StartTimerAsync(int miliseconds) {
            return base.Channel.StartTimerAsync(miliseconds);
        }
    }
}
